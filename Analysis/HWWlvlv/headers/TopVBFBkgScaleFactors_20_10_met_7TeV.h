static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.78564,0.0244026,0.0244026,0.0286992,0.031723,0.0316968,0.90427,0.882191,0.882191,0.788007,0.792418,0.761715,0.705323,0.705323,1.66963,1.66963,1.80994,0.0159269,0.779013,0.403173,0.334933,0.246287,0.220736,0.287541,0.339142,0.478418,0.00331912,0.00342313,0.0036566,0.00362577,0.00761569};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.34941,1.12665,1.12665,1.08001,1.09507,1.09279,1.98254,1.98301,1.98301,1.98412,1.9821,1.98064,1.98191,1.98191,2.04119,2.04119,2.0432,1.12279,1.98365,1.97799,2.06258,2.02502,2.02983,2.00937,2.01599,2.00696,1.09555,1.0952,1.09473,1.09404,1.07912};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.832247,0.0252418,0.0252418,0.0223791,0.0332803,0.0290981,0.0418228,0.0393078,0.0393078,0.0325018,0.0367004,0.0366629,0.0325512,0.0325512,0.0306169,0.0306169,0.0269261,0.0219167,1.18619,0.634973,0.552732,0.325492,0.297338,0.371081,0.43928,0.671029,0.00216306,0.00305998,0.00394367,0.000188319,0.00050216};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.38169,1.13059,1.13059,1.13014,1.14416,1.14416,1.11053,1.10955,1.10955,1.11384,1.11891,1.12029,1.11945,1.11945,1.13373,1.13373,1.12624,1.12681,1.98769,1.98425,1.97959,2.02212,2.02841,2.03644,2.03829,2.01129,1.14628,1.1527,1.1527,1.07983,1.12802};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.705234,0.026868,0.026868,0.0401523,0.0320606,0.03784,2.08809,2.08817,2.08817,1.96946,1.87463,1.78635,1.64408,1.64408,4.33119,4.33119,5.13127,0.0165035,0.0106281,0.010075,0.00812431,0.00556276,0.00378769,0.0355577,0.0388292,0.00929999,0.0135878,0.0129726,0.0147733,0.0190785,0.0232164};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.70753,1.11678,1.11678,1.06305,1.06305,1.06703,2.00677,2.00674,2.00674,2.00674,2.00674,2.00614,2.00614,2.00614,2.0509,2.0509,2.05116,1.32404,1.32404,1.22582,1.30608,1.12802,1.09226,1.12218,1.12465,1.07812,1.07764,1.07755,1.0784,1.0784,1.0784};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

