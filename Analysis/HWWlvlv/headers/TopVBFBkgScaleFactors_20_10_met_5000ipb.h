static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.931925,0.725273,1.59857,1.55714,1.52016,1.39896,1.4807,1.93462,1.89571,1.84939,1.69053,1.60116,1.46667,1.29232,1.21317,1.30157,1.2269,1.04314,0.962464,0.942607,0.848167,0.992211,1.00419,0.993099,0.971684,0.957119,0.954723,0.954461,0.954377,0.954469,0.948668};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.37892,1.69681,1.68109,1.68051,1.6799,1.6777,1.6203,1.55356,1.55323,1.55387,1.58701,1.58671,1.58133,1.54108,1.53786,1.49452,1.50376,1.54212,1.5405,1.50732,1.52022,1.39166,1.37563,1.37557,1.37547,1.37942,1.37942,1.37942,1.37935,1.37927,1.37969};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.799842,0.0202535,1.52079,1.47811,1.43496,1.30787,1.26912,1.0979,1.08338,1.07583,1.06388,1.09089,1.0341,0.754636,0.703465,0.697351,0.668568,0.626994,0.580194,0.334552,0.316581,0.798892,0.849791,0.847991,0.825996,0.820702,0.817277,0.816897,0.816897,0.817335,0.815211};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.57396,1.08405,2.02448,2.02318,2.02318,2.02078,2.0205,2.01006,2.00838,2.00765,2.00765,2.00387,1.99798,2.03616,2.02876,2.01297,2.01132,2.00677,2.00418,2.49871,2.48954,1.63006,1.57424,1.57362,1.57362,1.57469,1.57469,1.57469,1.57469,1.57442,1.57576};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
1.20992,2.13038,1.75902,1.72451,1.70345,1.59466,1.93653,3.41426,3.31061,3.14535,2.69881,2.47806,2.13127,2.24852,2.13958,2.37342,2.27433,1.81017,1.65726,1.93047,1.7334,1.36651,1.32391,1.29311,1.27314,1.24508,1.24496,1.24496,1.24413,1.2436,1.22922};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.4389,1.70282,1.70086,1.69897,1.69581,1.69238,1.57805,1.61014,1.61013,1.61159,1.66896,1.66837,1.6651,1.58233,1.57934,1.51802,1.52234,1.58846,1.58792,1.48537,1.48399,1.4304,1.43127,1.43157,1.43134,1.43923,1.43923,1.43923,1.43923,1.43923,1.43923};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

