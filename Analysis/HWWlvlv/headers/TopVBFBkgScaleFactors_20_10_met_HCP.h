static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.97932,1.43806,1.43806,1.3096,1.19991,0.924942,0.866133,0.826489,0.826489,0.823728,0.794671,0.788176,0.525474,0.525474,1.07961,1.07961,1.22664,1.10305,1.28102,0.620566,0.567291,1.1893,1.56352,1.56037,1.70273,1.28536,1.62213,1.28963,1.21377,1.35429,1.69939};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.23672,1.60196,1.60196,1.60196,1.57755,1.57755,1.59517,1.59384,1.59384,1.58598,1.58132,1.53647,1.55586,1.55586,1.55645,1.55645,1.49756,1.49732,1.4146,1.4941,1.44822,1.34696,1.357,1.3587,1.40673,1.56586,1.54412,1.56202,1.68893,1.68924,1.68945};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
1.12654,1.07327,1.07327,1.03043,1.01751,0.687328,0.652134,0.617321,0.617321,0.602399,0.598613,0.629465,0.135132,0.135132,0.0822538,0.0822538,0.0506856,0.0431897,0.68893,0.169432,0.391812,1.11178,1.94854,2.13296,2.81099,2.36858,3.03337,2.294,1.91361,2.02847,2.67352};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.30169,1.9745,1.9745,1.9745,1.89582,1.89582,1.89582,1.89582,1.89582,1.89582,1.88934,1.80152,1.13472,1.13472,1.12569,1.12569,1.11842,1.11634,1.68287,2.37693,1.66488,1.4569,1.4132,1.40983,1.43487,1.59921,1.57393,1.59777,1.75918,1.75957,1.75982};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.756801,2.21028,2.21028,1.84758,1.55031,1.48896,1.46119,1.40818,1.40818,1.44136,1.30513,1.11787,1.27098,1.27098,3.04161,3.04161,3.31066,3.42883,2.79465,1.50805,0.980459,1.39238,0.776802,0.601808,0.289494,0.178326,0.213408,0.221606,0.299136,0.358775,0.420275};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.29854,1.6881,1.6881,1.6881,1.68802,1.68802,1.70109,1.70109,1.70109,1.68497,1.67954,1.67954,1.66787,1.66787,1.58599,1.58599,1.51104,1.51104,1.51154,1.51576,1.59497,1.47196,1.51603,1.49706,1.68272,1.9063,1.9063,2.00115,2.00115,2.00115,2.00115};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

