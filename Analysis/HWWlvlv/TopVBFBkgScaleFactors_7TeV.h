static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.788066,0.0236732,0.0236732,0.0280116,0.0311688,0.0311855,0.904923,0.8828,0.8828,0.790174,0.794595,0.763809,0.707613,0.707613,1.67725,1.67725,1.81821,0.020311,0.783733,0.406233,0.337644,0.247232,0.221332,0.288278,0.340015,0.478545,0.00332263,0.00373228,0.00366147,0.00431817,0.00923079};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.34895,1.12896,1.12896,1.07993,1.09579,1.09328,1.98312,1.98362,1.98362,1.98272,1.9807,1.97924,1.98002,1.98002,2.03936,2.03936,2.04136,1.1098,1.97829,1.97119,2.05467,2.02173,2.02766,2.00738,2.01398,2.00725,1.09549,1.08797,1.09464,1.08157,1.08342};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.834724,0.0239043,0.0239043,0.0213201,0.0324099,0.028337,0.0410443,0.038514,0.038514,0.0344803,0.0387611,0.0386587,0.0350107,0.0350107,0.0327392,0.0327392,0.0291107,0.0238458,1.19222,0.639834,0.556923,0.326737,0.298146,0.372072,0.440455,0.671191,0.00204648,0.00298251,0.00384382,0.00019447,0.000401136};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.38111,1.13571,1.13571,1.13488,1.14748,1.14748,1.11105,1.10997,1.10997,1.11143,1.11591,1.11714,1.11543,1.11543,1.12795,1.12795,1.1211,1.12138,1.98327,1.97734,1.97279,2.01885,2.02623,2.03429,2.03613,2.01161,1.14181,1.15061,1.15061,1.07982,1.12801};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.706871,0.0269344,0.0269344,0.0399671,0.0319127,0.0376957,2.0907,2.09078,2.09078,1.97193,1.87698,1.78859,1.64614,1.64614,4.34284,4.34284,5.14507,0.0191483,0.0123314,0.0100608,0.00806268,0.00550917,0.00357925,0.0352438,0.0387247,0.00918407,0.0135249,0.0155677,0.0181953,0.0234977,0.0285952};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.70736,1.11702,1.11702,1.06307,1.06307,1.06712,2.00685,2.00681,2.00681,2.00681,2.00681,2.00621,2.00621,2.00621,2.05091,2.05091,2.05116,1.28034,1.28034,1.22664,1.30915,1.12801,1.0913,1.1229,1.12463,1.07831,1.07766,1.07973,1.08264,1.08264,1.08264};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

