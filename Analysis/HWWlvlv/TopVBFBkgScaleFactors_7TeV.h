static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.652938,0.0338765,0.0338765,0.0382784,0.0429007,0.0457445,0.953788,0.929294,0.929294,0.80648,0.829911,0.785012,0.734932,0.734932,0.0189402,0.0189402,0.0163224,0.0225528,0.877804,0.463119,0.385162,0.2781,0.236354,0.312977,0.374711,0.533803,0.0312431,0.0373998,0.027649,0.0279074,0.0297027};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.4067,1.12984,1.12984,1.10251,1.15231,1.14419,2.35155,2.35071,2.35071,2.3489,2.34384,2.34125,2.34805,2.34805,1.11532,1.11532,1.11844,1.14493,1.9912,1.98762,2.07357,1.99597,2.03723,2.00474,1.99311,1.97858,1.17591,1.18754,1.09652,1.09187,1.09235};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.877339,0.0382571,0.0382571,0.029974,0.0267233,0.0255838,0.0459128,0.0438689,0.0438689,0.0363851,0.0378909,0.0365079,0.0290437,0.0290437,0.0196061,0.0196061,0.0183315,0.0150663,1.34199,0.764489,0.668111,0.374042,0.32094,0.400137,0.477859,0.735733,0.0361301,0.0475892,0.0312164,0.0286986,0.026448};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.4054,1.13288,1.13288,1.13288,1.13066,1.13066,1.12476,1.12476,1.12476,1.12476,1.12476,1.12476,1.12478,1.12478,1.10643,1.10643,1.11372,1.12087,1.99767,1.98724,1.98594,1.99759,2.02824,2.03535,2.01846,1.98832,1.2173,1.22785,1.12536,1.1188,1.11651};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.455947,0.0325047,0.0325047,0.0509182,0.0658208,0.0746614,3.11297,3.11315,3.11315,2.91826,2.91644,2.6698,2.56013,2.56013,0.0195792,0.0195792,0.0127309,0.0386211,0.0177424,0.0116044,0.0118449,0.0164829,0.0135041,0.0638157,0.0697651,0.0214735,0.0203242,0.0204617,0.0235367,0.028611,0.0348186};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.77986,1.1134,1.1134,1.08039,1.16915,1.15307,1.99778,1.99773,1.99773,1.99773,1.99773,1.99714,1.99714,1.99714,1.12179,1.12179,1.13132,1.22632,1.31344,1.23258,1.26253,1.10234,1.11906,1.10939,1.11494,1.08248,1.08015,1.0825,1.08508,1.08508,1.08508};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

