static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.786146,0.0244218,0.0244218,0.0287191,0.0317493,0.0317228,0.905443,0.883335,0.883335,0.78903,0.793446,0.762704,0.706239,0.706239,1.67096,1.67096,1.81138,0.0159421,0.779496,0.403423,0.335142,0.246438,0.220871,0.287717,0.339349,0.478711,0.00332016,0.0034242,0.00365775,0.00362691,0.00761913};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.34942,1.12665,1.12665,1.08001,1.09507,1.0928,1.98254,1.98302,1.98302,1.98413,1.98211,1.98065,1.98192,1.98192,2.04119,2.04119,2.04319,1.12279,1.98364,1.97798,2.06257,2.02502,2.02983,2.00936,2.01599,2.00696,1.09555,1.0952,1.09473,1.09404,1.07911};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.83272,0.0252639,0.0252639,0.0223997,0.0333154,0.0291287,0.0418597,0.0393421,0.0393421,0.0325313,0.0367349,0.0366977,0.0325819,0.0325819,0.030647,0.030647,0.0269517,0.0219377,1.18692,0.635366,0.553074,0.32569,0.29752,0.371308,0.439549,0.67144,0.00216514,0.00306302,0.00394758,0.0001884,0.000502468};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.38171,1.13058,1.13058,1.13013,1.14414,1.14414,1.11052,1.10954,1.10954,1.11384,1.1189,1.12028,1.11945,1.11945,1.13373,1.13373,1.12624,1.12681,1.98769,1.98424,1.97958,2.02212,2.02841,2.03644,2.03829,2.01129,1.14629,1.1527,1.1527,1.07982,1.12801};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.705838,0.0268847,0.0268847,0.0401722,0.0320765,0.0378597,2.09082,2.09089,2.09089,1.97204,1.87708,1.78869,1.64623,1.64623,4.33463,4.33463,5.13534,0.0165166,0.0106365,0.0100833,0.008131,0.00556616,0.00379046,0.0355799,0.0388528,0.00930374,0.0135934,0.0129781,0.0147798,0.019087,0.0232267};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.70749,1.11678,1.11678,1.06305,1.06305,1.06703,2.00677,2.00674,2.00674,2.00674,2.00674,2.00614,2.00614,2.00614,2.0509,2.0509,2.05116,1.32404,1.32404,1.22581,1.30606,1.12801,1.09225,1.12217,1.12464,1.07812,1.07763,1.07754,1.0784,1.0784,1.0784};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

