static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.804539,0.0268503,0.0268503,0.0338501,0.0360856,0.0368986,0.928686,0.906881,0.906881,0.811773,0.816805,0.785041,0.727298,0.727298,1.7271,1.7271,1.87188,0.0262126,0.800938,0.415105,0.347444,0.254082,0.226082,0.297896,0.351036,0.494078,0.0252491,0.0286827,0.016506,0.0163168,0.0170195};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.34874,1.11724,1.11724,1.08966,1.09585,1.09291,1.97694,1.97652,1.97652,1.97556,1.97301,1.97171,1.97247,1.97247,2.03774,2.03774,2.03993,1.12238,1.97049,1.96356,2.0391,2.00803,2.02006,1.9886,1.99597,1.98919,1.17175,1.1831,1.08864,1.08389,1.08401};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.853723,0.0235868,0.0235868,0.0211146,0.0324435,0.0283664,0.0429356,0.041806,0.041806,0.0374279,0.0427393,0.0423376,0.038437,0.038437,0.0349886,0.0349886,0.0307199,0.0267725,1.21555,0.652379,0.569612,0.335368,0.307113,0.383838,0.4526,0.689837,0.0282365,0.0344119,0.0141968,0.0110397,0.00889071};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.37899,1.13202,1.13202,1.13226,1.14749,1.14749,1.11303,1.1139,1.1139,1.11544,1.12157,1.12336,1.12181,1.12181,1.13271,1.13271,1.12395,1.12834,1.9777,1.97177,1.96425,2.00641,2.01009,2.01655,2.02235,1.99794,1.22016,1.23054,1.13658,1.13762,1.14058};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.719419,0.0346711,0.0346711,0.0539591,0.043085,0.0517373,2.14569,2.14581,2.14581,2.02383,1.92638,1.83566,1.68946,1.68946,4.46448,4.46448,5.28919,0.0249409,0.0170919,0.0126472,0.0127417,0.0125362,0.011043,0.0564854,0.0610228,0.0184745,0.0186003,0.0185805,0.0221727,0.0286343,0.0348469};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.71198,1.10922,1.10922,1.07649,1.07649,1.0782,2.00043,2.00037,2.00037,2.00037,2.00037,1.99978,1.99978,1.99978,2.05089,2.05089,2.05114,1.28086,1.26427,1.22364,1.24789,1.1132,1.14131,1.11126,1.11384,1.07785,1.07798,1.08012,1.08265,1.08265,1.08264};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

