static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
1.00968,1.5209,1.5209,1.37471,1.25904,0.958177,0.896856,0.854145,0.854145,0.850412,0.821196,0.814598,0.54363,0.54363,1.08874,1.08874,1.23991,1.1133,1.28436,0.623407,0.571766,1.19583,1.59605,1.58771,1.74094,1.31418,1.66188,1.3202,1.25199,1.39742,1.74434};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.23926,1.60291,1.60291,1.60291,1.57814,1.57814,1.59563,1.59447,1.59447,1.58748,1.58286,1.53824,1.56317,1.56317,1.55601,1.55601,1.49644,1.4962,1.41404,1.49347,1.44584,1.35008,1.36012,1.36192,1.40972,1.5702,1.54778,1.56683,1.6928,1.69312,1.69333};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
1.16014,1.10811,1.10811,1.06219,1.04591,0.696316,0.660508,0.625342,0.625342,0.61083,0.606519,0.636163,0.134831,0.134831,0.0809231,0.0809231,0.0506326,0.0430986,0.684892,0.167786,0.39257,1.12031,1.99539,2.1814,2.8898,2.44052,3.13694,2.3763,1.99914,2.12021,2.77172};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.30499,1.97476,1.97476,1.97476,1.89432,1.89432,1.89432,1.89432,1.89432,1.89432,1.88852,1.80418,1.13645,1.13645,1.12885,1.12885,1.12193,1.11986,1.68313,2.38328,1.65939,1.46173,1.41616,1.41302,1.43785,1.60337,1.57734,1.60265,1.76228,1.76267,1.76293};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.781442,2.42634,2.42634,1.98726,1.6731,1.60565,1.57922,1.51425,1.51425,1.54564,1.40113,1.19582,1.35028,1.35028,3.0982,3.0982,3.37723,3.49129,2.82842,1.52642,0.998175,1.39449,0.779141,0.601116,0.291268,0.178326,0.213321,0.22154,0.298726,0.357682,0.419117};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.29702,1.69209,1.69209,1.69209,1.69202,1.69202,1.7036,1.7036,1.7036,1.68933,1.68353,1.68353,1.67332,1.67332,1.58491,1.58491,1.50979,1.50979,1.51028,1.51459,1.59355,1.47074,1.51393,1.49502,1.6833,1.90589,1.90589,2.00115,2.00115,2.00115,2.00115};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

