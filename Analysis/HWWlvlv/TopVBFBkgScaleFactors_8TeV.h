static Double_t TopVBFBkgScaleFactor(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
0.86383,0.720979,1.56669,1.52608,1.4898,1.37093,1.45031,1.88875,1.85075,1.80553,1.64842,1.52274,1.2726,1.13581,1.06694,1.15886,1.09039,0.919761,0.848889,0.843763,0.757508,0.919823,0.934428,0.924117,0.904191,0.890145,0.887916,0.887672,0.887602,0.887698,0.882252};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFBkgScaleFactorKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgKappa[31] = { 
1.39761,1.69765,1.67707,1.67647,1.67587,1.67369,1.61694,1.55081,1.55047,1.55111,1.58478,1.59975,1.65083,1.59861,1.59462,1.54046,1.55164,1.5985,1.59651,1.5515,1.56678,1.41072,1.39264,1.39257,1.39246,1.39685,1.39685,1.39685,1.39677,1.39668,1.39714};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFOFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgOF[31] = { 
0.719207,0.0189314,1.47469,1.43333,1.39148,1.26827,1.23069,1.06486,1.05082,1.04351,1.03191,1.05902,0.799076,0.577251,0.539181,0.536316,0.514405,0.483003,0.447258,0.259869,0.245079,0.709527,0.764134,0.762586,0.742802,0.737892,0.734811,0.73447,0.73447,0.734894,0.732835};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgOF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFOFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFOFBkgKappa[31] = { 
1.62011,1.08527,2.02422,2.02289,2.02289,2.02044,2.02015,2.00948,2.00776,2.00702,2.00702,2.00477,2.25287,2.3143,2.30227,2.27791,2.27525,2.26795,2.26379,2.87429,2.86912,1.68859,1.62042,1.61969,1.61969,1.62097,1.62097,1.62097,1.62097,1.62064,1.62223};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFOFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

static Double_t TopVBFSFYield(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFBkgSF[31] = { 
1.15758,2.10185,1.73357,1.6955,1.67124,1.56425,1.89705,3.3286,3.22744,3.06596,2.625,2.40951,2.07128,2.19331,2.07776,2.31194,2.23511,1.78198,1.63139,1.85072,1.6618,1.31585,1.2748,1.24512,1.22587,1.19856,1.19844,1.19844,1.19765,1.19714,1.18328};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFBkgSF[massIndex];
  } else { assert(0); }
  return 1.0;
}
static Double_t TopVBFSFYieldKappa(Int_t mH) {
  Int_t mHiggs[31] = {0,110,115,118,120,122,124,125,126,128,130,135,140,145,150,155,160,170,180,190,200,250,300,350,400,450,500,550,600,700,800};
  Double_t TopVBFSFBkgKappa[31] = { 
1.44833,1.70995,1.70849,1.70825,1.70652,1.70307,1.58561,1.60997,1.60995,1.61146,1.6702,1.66977,1.66674,1.58254,1.58212,1.51964,1.51935,1.5843,1.58376,1.49442,1.49298,1.43686,1.43776,1.43806,1.43783,1.44598,1.44598,1.44598,1.44598,1.44598,1.44598};
  Int_t massIndex = -1;
  for (UInt_t m=0; m < 31 ; ++m) {
    if (mH == mHiggs[m]) massIndex = m;
  }
  if (massIndex >= 0) {
    return TopVBFSFBkgKappa[massIndex];
  } else { assert(0); }
  return 1.0;
}

